namespace Pco
{
  class Interface : HwInterface
  {
%TypeHeaderCode
#include <HwInterface.h>
#include <PcoInterface.h>
%End
  
  public:

    //Interface();
    Interface(Pco::Camera*);
    //Interface(Basler::Camera& cam);

    //virtual ~Interface();
    virtual ~Interface();

    //- From HwInterface
    //    virtual void 	getCapList(CapList& /Out/) const;
    //  virtual void getCapList(CapList &) const;
    virtual void	getCapList(std::vector<HwCap> &cap_list /Out/) const;

    virtual void	reset(ResetLevel reset_level);
    //virtual void reset(ResetLevel reset_level);

    virtual void 	prepareAcq();
    //virtual void prepareAcq();

    virtual void 	startAcq();
    //virtual void startAcq();

    virtual void 	stopAcq();
    //virtual void stopAcq();

    virtual void 	getStatus(HwInterface::StatusType& status /Out/);
    //virtual void getStatus(StatusType& status);

    virtual int 	getNbHwAcquiredFrames();
    //virtual int getNbHwAcquiredFrames();

    virtual int 	getNbAcquiredFrames();
    //virtual int getNbAcquiredFrames();

    void _getCocRunTime(double& coc_run_time /Out/);
    //void _getCocRunTime(double& coc_run_time){ coc_run_time = m_cam->m_cocRunTime ;};

    void _getFrameRate(double& frame_rate /Out/);
    //void _getFrameRate(double& frame_rate){ frame_rate = m_cam->m_frameRate ;};


  };
};



